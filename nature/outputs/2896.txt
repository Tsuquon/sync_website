the genomics world has no shortage of visualization tools. but as new methods and data types emerge, existing techniques can struggle to cope. now, a tool known as gosling allows bioinformaticians to build apps that can display genomic information with the same level of flexibility that developers have come to expect from other graphics programming tools.first released in 2020 by bioinformatician nils gehlenborg and his team at harvard medical school in boston, massachusetts, gosling stands for ‘grammar of scalable linked interactive nucleotide graphics’1. but the name is also a nod to structural biologist raymond gosling, who, with rosalind franklin, captured the famous ‘photograph 51’, which revealed the structure of dna.gosling is what is known as a grammar. it is implemented in programming libraries that provide a flexible syntax for describing genomic regions and interactions and how they should be laid out on a web page. researchers and bioinformaticians can use these libraries to create interactive, scalable visualizations that they can share with their colleagues, and to build bespoke genetic-analysis tools.the views that gosling creates can be linked, so that selecting a region in one panel highlights the same region in another. they can also be panned, manipulated and zoomed in and out of from the chromosome level down to single nucleotides. the visual representation adapts to the zoom level, gehlenborg says — a feature called semantic zoom. an online testing environment provides visualizations that users can extend to create and export their own graphics. and libraries for both python (gos) and javascript (gosling.js) enable bioinformaticians to program the images directly into jupyter computational notebooks and other applications. an alpha-stage r version was released in july. the libraries are used to systematically relate data sets to their visualizations, says tamara munzner, a computer scientist at the university of british columbia in vancouver, canada. popular libraries such as ggplot2 and vega-lite use the ‘grammar of graphics’ to define their visualizations. but these tools can be used for any type of graphic, whereas gosling is specifically designed for genomics visualizations. it’s like vega-lite for genomics, munzner says.programming tools for visualizations range from template-based functions that use a single line of code to create a standard type of graph to those that assemble visualizations piece by piece from lines and geometric shapes, such as the javascript d3.js library. the template version is easy to use, but relatively inflexible; the other offers a great deal more customization, but is laborious to use.gosling really bridges that gap, making it way easier to make new tools that have visualization components, says maria nattestad, a software engineer at google in mountain view, california. as part of her phd research in 2015, nattestad developed a tool called splitthreader, which presents the genome in a circular layout known as a circos plot, with sequencing reads as arcs to highlight structural variations. with no other options, she drew those elements from scratch, using d3.js to specify the placement and dimensions of each line, rectangle and circle. it was such a learning curve, she says. it took me a long time to build splitthreader, she says, but adds that it could have probably built a lot faster with gosling. plot a course through the genomegehlenborg says that gosling arose out of a 2019 literature review2, during which his team surveyed the genome visualization landscape and built up a taxonomy for the tools and their capabilities. from there, the researchers developed a syntax to systematically describe the visualizations those tools could make. gosling, gehlenborg explains, is a fundamental approach to assemble genomic visualizations using that same taxonomy.gosling encodes the data using a plain-text format called javascript object notation (json) and uses language that is specific to genomics to supplement the more general terms used in standard graphing libraries. gosling.js, gos and g(r)osling then use that encoding to generate files in their respective programming languages. the final visualization is drawn in a web browser using a rendering engine and file-formatting tools developed by the gehlenborg team to visualize chromosomal data from a technique called hi-c3. visualizations at gosling-lang.org provide starting points for circos plots, gene annotation, chromatin conformation heat maps, evolutionary conservation and more.postdoc sehi l’yi, who led gosling’s development, says that what differentiates gosling from other visualization tools is its expressiveness. with most tools, he says, the graphics that can be made and what they will look like are predefined. it is really not easy to customize visualizations as a user. but with gosling, users can, for instance, specify the colour, dimensions and placement of the symbol used to represent a centromere or genomic interval, then overlay that on an ideogram of a chromosome to highlight a region of interest.a team of master’s students at the university of british columbia decided to use gosling to create its final project in a data-visualization class. one of my team mates had heard about it at a conference last year, says team member armita safa. even for someone who doesn’t have a coding background, it is relatively easier to work with gosling than most other things that are used for visualization, she says. that said, she notes that they initially struggled to extract the data they needed to allow users to click on regions and create new visualizations. naturetech hubdominic girardi, chief product officer at the data visualization company datavisyn in linz, austria, has also experimented with gosling to create an interactive playground that allows users to filter a table of genes by genomic region. the firm — which gehlenborg co-founded — is now using gosling to generate visualization tools for its corporate clients, although it has not yet completed one, girardi says.gosling isn’t the only visualization library for genomic data; other examples include ggbio, gggenomes and gggenes, all of which are extensions of the ggplot2 graphing library. but most of these tools create static images, gehlenborg says — pictures, rather than interactive visualizations. gehlenborg says that future plans for gosling include giving it a graphical interface, so that researchers can create visualizations by dragging-and-dropping widgets onto a virtual canvas rather than having to program them.robert buels, who is leading development of a genome browser at the university of california, berkeley, says that gosling occupies a really interesting space in the genomics visualization toolbox. you can get a lot more customizability with gosling, he says. but users don’t have to write nearly as much code as they do for tools such as d3.js.it’s a really interesting niche in between the two things, he says, that i think is a really great addition to the field.