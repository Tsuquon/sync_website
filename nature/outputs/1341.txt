a german physicist and a hedge-fund magnate are competing to push protein simulations into the realm of the millisecond. brendan borrell finds out what is at stake.you have full access to this article via your institution.for a while, klaus schulten did not mind the godiva chocolates arriving in his team's mailboxes at the university of illinois in urbana-champaign. nor was schulten, whose biophysics group boasted one of the fastest algorithms for simulating protein structures, much concerned when his programmers received e-mails heralding a job opportunity at an undisclosed manhattan firm that aimed to ?fundamentally transform the process of drug discovery?.it was early 2004, and schulten's 40-strong group was attracting close to $2 million a year in grant money. nearly 20,000 users had downloaded his software, called namd for nanoscale molecular dynamics, for use on computers running hundreds of parallel microprocessors to simulate how individual atoms behave in proteins and other large molecules. schulten's group itself was working on a million-atom model of the satellite tobacco mosaic virus, which the researchers called ?the first all-atom simulation of an entire life form?1.but the german-born physicist got his wake-up call in 2006, when he saw a table of computing benchmarks in a report from that year's supercomputing conference in tampa, florida. a new program called desmond, he saw, could calculate each step of a standard molecular-dynamics simulation ? the 23,558 atoms in a system involving the protein dihydrofolate reductase ? in a little over a thousandth of a second. namd was ten times slower. ?suddenly,? schulten says, ?we were not the best anymore.?the title had passed to the sender of the chocolates ? david shaw, a hedge-fund magnate and computer expert who taught himself physical chemistry. over the previous few years, he had recruited more than 50 scientists and engineers, including three former students from schulten's group, and put them to work in his midtown manhattan high-rise.in the paper from the supercomputing conference, shaw's team wrote that desmond ?is faster than namd at all levels of parallelism examined?2. and the group noted that on one simulation desmond ran faster on 1,024 processors than namd ran on the 16,384 processors of ibm's blue gene/l ? the world's fastest supercomputer.the numbers shocked schulten, who believed his team was on course to simulate molecular dynamics on the scale of milliseconds ? longer than anyone had previously achieved. even with cutting-edge programs such as desmond and namd, scientists have been able to glimpse only the fastest-folding proteins, such as the villin headpiece, which folds in about 10 microseconds. the number of possible configurations of atoms in larger molecules, over time and in three dimensions, is astronomical. if these kinds of simulation could be sped up 1,000-fold, which even then could take a month of computing time, the pay-off could be high. they might, for instance, reveal binding sites for new drugs to tackle a wide range of medical problems.shaw and schulten are now spending millions of dollars each to break the millisecond barrier. but some in the field aren't sure what the all-out push will come to. as ross walker, a computational biologist at the san diego supercomputing center in california, puts it: ?a lot of what they are going to see are limitations on the underlying computational models.?  pushing the envelope  to make molecular-dynamics simulations feasible with today's computers, scientists have had to make a number of simplifying assumptions. typical simulations calculate the forces acting on each atom from a century's worth of chemistry experiments on organic molecules much smaller than the proteins scientists wish to simulate. the simulated molecules are also pegged together like tinkertoys; they can change shape during the simulation, but cannot react to form new molecules.the first software that sought to capture this world was developed at harvard university in the late 1970s. in a paper in nature, a team led by martin karplus published its 458-atom simulation of a tiny protein on an ibm 370, a top-of-the-line supercomputer3. today, development teams around the world continue to work on charmm, or chemistry at harvard molecular mechanics, even as other algorithms such as namd have risen to compete with it.i wouldn't have told them about a great solution i had developed, and they wouldn't tell me their solution. klaus schulten one of the biggest factors limiting the development of molecular dynamics has always been computational power ? which is where shaw comes in. having stepped back from running his hedge fund around 2001 (see 'from science to finance and back again'), shaw, who is also an adjunct professor of biomedical informatics at columbia university in new york, returned to his first enthusiasm ? the architecture of massively parallel supercomputers. predicting the motions of large systems of atoms requires finding the best way to communicate particle positions and forces among multiple processors. and on a scorching afternoon in june 2003, shaw holed himself up at a friend's house and found a way to speed things up.in traditional parallel approaches, each processor calculates forces to update the position of all the particles in its own small box of simulated space. but to do so, it must import positional data from neighbouring boxes within a certain radius. shaw's strategy, implemented in desmond, changes the geometry of this import region from a hemisphere to a semicircular plate and a rectangular tower. as the number of processors available to desmond grows, the volume of this import region shrinks more quickly than in the approaches used by namd and charmm. in one of the first studies to use desmond, this speed-up gave shaw and his collaborators an unprecedented view of the workings of an ion transporter that the bacterium escherichia coli uses to maintain its salt and ph balance4.but shaw knew that software alone could not obtain millisecond-long molecular simulations. his plan has been to build a supercomputer so dumb, he says, that it can do nothing except molecular dynamics. ?but,? he beams, ?it's really fast at that.? he calls it a computational microscope and has named it anton, after anton von leeuwenhoek, the seventeenth-century dutch scientist and builder of microscopes. the first segment of anton is due to arrive in shaw's lab at the end of the year.  need for speed  anton uses a high-speed task pipeline to accelerate the most computationally intensive tasks of molecular dynamics ? modelling certain long-range interactions among atoms. but the chip does not have the ability to speed up software-based operations to the same extent, and the hard-wired pipeline may not be flexible enough to efficiently incorporate advances in the field. ?at this point, though, we placed our bets,? shaw says.when shaw began the work, he estimated that anton would run molecular-dynamics simulations 1,000 times faster than previous parallel supercomputers. in recent months, he has stopped presenting the 1,000-fold estimate in talks, although he still believes anton will run more than 100 times faster than today's machines. but with general-purpose hardware doubling in speed about every two years, many wonder how long anton might maintain a lead. ?if you are a little bit of a sceptic,? says schulten, ?you would say it is another attempt for a special-purpose processor that will be overrun by market forces.?the field is littered with what gregory voth, a computational chemist at the university of utah in salt lake city, calls ?dead bodies?. in 1984, the late biochemist cyrus levinthal designed a molecular-dynamics computer called fastrun, but it took his group six years to get it running. during the past ten years, ibm and riken, japan's main research institute, have collaborated on several generations of chips intended for molecular-dynamics simulations, called md-grape, without producing any major breakthroughs in the field. at the national institutes of health in bethesda, maryland, in the late 1980s, bernard brooks abandoned his effort, dubbed gemmstar, when hewlett-packard announced its blazingly fast 9000 series ? which could be had for as little as $12,000. scientists are racing not just against each other, but against silicon valley.schulten has played that game before. in munich in the late 1980s, he built his own parallel supercomputer out of 60 processors mail-ordered from england. he carried his computer in a backpack to his new laboratory in illinois, where he ran a 30,000-atom simulation of the bacteriorhodopsin protein, which drives the photosynthetic reaction that turns light into an electric charge. his simulation lasted 263 picoseconds ? less than a millionth of a millisecond ? and required more than two years of continuous computation5. by then, his machine was obsolete.  thinking big  in the past 15 years, schulten's ambitions have grown: from 100,000 atoms in 1999, to 300,000 in 2003, and culminating with his million-atom simulation of the tobacco mosaic virus published in 2006. to match his models, schulten developed software that could scale with advances in parallel computers, something charmm could not do at the time. chemist richard hilderbrandt, who supported the early development of namd at the computing directorate of the us national science foundation, says that the idea ?was to take a large molecule and break it up into patches to distribute to processors. it was quite a bold step?.the drawback of schulten's strategy was that it could not simulate the behaviour of smaller molecules significantly faster than it could large ones. ?if you have a protein of 500 atoms,? he says, ?it's very difficult to put it on a parallel computer with 5,000 processors.?schulten emphasizes that his publicly funded group had to focus on ensuring that namd, which is freely distributed, would run on a wide range of platforms. shaw's team, in contrast, could tune desmond for its state-of-the-art computing cluster, about a year before similar clusters were available at national science foundation computing centres.shaw says that profits are a long way off, and that he is working to share his team's technology as much as possible. but his proprietary algorithm will ultimately be sold to industry through an agreement with schrüdinger, a biotechnology company founded by chemist richard friesner, a colleague of shaw's at columbia. schulten had only inklings of shaw's ambitions when he gave a seminar at d. e. shaw research in october 2004. ?at that time it was clear that there was a competition,? he says, ?but in a very civilized way.? even so, he says, ?i wouldn't have told them about a great solution i had developed, and they wouldn't tell me their solution.?although schulten's software has been a boon to many researchers, with a development cost of $20 million it might also be considered a drain on their resource pool. some scientists contend that the pursuit of speed has hindered alternative modes of inquiry. ?i think it's unfortunate that some of the researchers who use more established codes with a broader range of functionality are not getting the same access to national resources,? says computational chemist charles brooks of the scripps research institute in la jolla, california.  tough decisions  some participants at a 2001 supercomputing conference recall hilderbrandt telling the audience that users should switch from older programs such as charmm to modern parallelized packages, such as namd. hilderbrandt, who is now at the department of energy, does not recall being so specific, but says he still believes namd is ?the program of choice? for most applications.michael crowley at the national renewable energy laboratory in golden, colorado, doesn't buy that. he uses charmm to study biofuels and says: ?charmm has functionality that as far as i know, no other program comes near.? he says that when he has applied for supercomputing time from allocating agencies, ?you can almost expect that somebody is going to suggest you use namd?.there are deeper questions about the pursuit of ever-longer timescales. ?it's clear to me that what's emerging out of both schulten's and shaw's efforts are technological advances that are going to affect the entire community,? says brooks. ?but whether an individual achievement of a millisecond timescale for any particular simulation is of great significance, i'm not entirely sure.?researchers who use more established codes are not getting the same access to resources. charles brooks vijay pande, at stanford university in california, has pioneered the folding@home distributed-computing project, which uses the personal computers and sony playstations of more than 250,000 volunteers to study protein folding. ?the revolution that's going on,? he says, ?is people are now treating molecular dynamics in a much more sophisticated way, where they are running hundreds or thousands or millions of simulations and then data-mining those simulations.? because a simulation may take a slightly different course each time, he notes, a single long simulation cannot provide the statistical information that must be gathered over many runs, such as the affinities for binding to a drug.schulten and shaw may also be pushing current models to their breaking point. neither group is investing significant resources in improving fixed-charge force fields, which might turn out not to be accurate enough for lengthy simulations. for instance, when two atoms approach one another, the electron orbits of one can get sucked towards the positive charge generated by the other. this phenomenon, called polarizability, is cumbersome to model and slow to compute. shaw estimates that it would slow down computation by roughly a factor of ten; schulten thinks it may be only a factor of two.yet these difficulties may be a reason for moving forward, not calling a halt. longer simulations can show where the models are failing, and they can guide the distributed-computing approach. shaw believes his group can make a meaningful contribution to the field, but he is well aware of the problems ahead. ?if you have something you're sure is going to work,? he says, ?you're not being ambitious enough.?last year, schulten's group started running a new version of namd that can handle smaller molecules faster. his team has also started programming the graphics accelerator chips prized by pc gamers ? an economical solution to the hardware problem that could further shrink anton's expected lead. and, now that the team is up to speed with the university of illinois's cluster, abe, it has tailored a special version of namd to compete on equal terms with desmond.two months ago, schulten was delighted to tell shaw about a simulation of a 38,000-atom protein, in which namd had set a new personal best, computing a 0.1-microsecond simulation in the course of a day. ?we agreed, now the programs are pretty equal,? says schulten. and for his part, shaw may be starting to concede that each algorithm has its benefits. ?schulten has made extraordinary strides in his namd code,? he says, ?so it's not obvious to me that desmond will be significantly faster for all applications.? freddolino, p. l. et al. structure 14, 437?449 (2006).article google scholar bowers, k. j. et al. proc. acm/ieee conf. on supercomputing (sc06), tampa, florida, 2006.mccammon, j. a., gelin, b. r. & karplus, m. nature 267, 585?590 (1977).article google scholar arkin, i. t. et al. science 317, 799?803 (2007).article google scholar heller, h., schaefer, m. & schulten, k. j. phys. chem. 97, 8343?8360 (1993).article google scholar download referencesyou can also search for this author in pubmed google scholarbrendan borrell is a freelance science writer in new york city. klaus schulten  d. e. shaw research reprints and permissionsborrell, b. chemistry: power play. nature 451, 240–243 (2008). https://doi.org/10.1038/451240adownload citationpublished: 16 january 2008issue date: 17 january 2008doi: https://doi.org/10.1038/451240aanyone you share the following link with will be able to read this content:sorry, a shareable link is not currently available for this article. provided by the springer nature sharedit content-sharing initiative 