a self-driving car approaches a stop sign, but instead of slowing down, it accelerates into the busy intersection. an accident report later reveals that four small rectangles had been stuck to the face of the sign. these fooled the car’s onboard artificial intelligence (ai) into misreading the word ‘stop’ as ‘speed limit 45’.such an event hasn’t actually happened, but the potential for sabotaging ai is very real. researchers have already demonstrated how to fool an ai system into misreading a stop sign, by carefully positioning stickers on it1. they have deceived facial-recognition systems by sticking a printed pattern on glasses or hats. and they have tricked speech-recognition systems into hearing phantom phrases by inserting patterns of white noise in the audio.these are just some examples of how easy it is to break the leading pattern-recognition technology in ai, known as deep neural networks (dnns). these have proved incredibly successful at correctly classifying all kinds of input, including images, speech and data on consumer preferences. they are part of daily life, running everything from automated telephone systems to user recommendations on the streaming service netflix. yet making alterations to inputs — in the form of tiny changes that are typically imperceptible to humans — can flummox the best neural networks around.these problems are more concerning than idiosyncratic quirks in a not-quite-perfect technology, says dan hendrycks, a phd student in computer science at the university of california, berkeley. like many scientists, he has come to see them as the most striking illustration that dnns are fundamentally brittle: brilliant at what they do until, taken into unfamiliar territory, they break in unpredictable ways.sources: stop sign: ref. 1; penguin: ref. 5that could lead to substantial problems. deep-learning systems are increasingly moving out of the lab into the real world, from piloting self-driving cars to mapping crime and diagnosing disease. but pixels maliciously added to medical scans could fool a dnn into wrongly detecting cancer, one study reported this year2. another suggested that a hacker could use these weaknesses to hijack an online ai-based system so that it runs the invader’s own algorithms3.in their efforts to work out what’s going wrong, researchers have discovered a lot about why dnns fail. there are no fixes for the fundamental brittleness of deep neural networks, argues françois chollet, an ai engineer at google in mountain view, california. to move beyond the flaws, he and others say, researchers need to augment pattern-matching dnns with extra abilities: for instance, making ais that can explore the world for themselves, write their own code and retain memories. these kinds of system will, some experts think, form the story of the coming decade in ai research.in 2011, google revealed a system that could recognize cats in youtube videos, and soon after came a wave of dnn-based classification systems. everybody was saying, ‘wow, this is amazing, computers are finally able to understand the world,’ says jeff clune at the university of wyoming in laramie, who is also a senior research manager at uber ai labs in san francisco, california.but ai researchers knew that dnns do not actually understand the world. loosely modelled on the architecture of the brain, they are software structures made up of large numbers of digital neurons arranged in many layers. each neuron is connected to others in layers above and below it.the idea is that features of the raw input coming into the bottom layers — such as pixels in an image — trigger some of those neurons, which then pass on a signal to neurons in the layer above according to simple mathematical rules. training a dnn network involves exposing it to a massive collection of examples, each time tweaking the way in which the neurons are connected so that, eventually, the top layer gives the desired answer — such as always interpreting a picture of a lion as a lion, even if the dnn hasn’t seen that picture before.a first big reality check came in 2013, when google researcher christian szegedy and his colleagues posted a preprint called ‘intriguing properties of neural networks’4. the team showed that it was possible to take an image — of a lion, for example — that a dnn could identify and, by altering a few pixels, convince the machine that it was looking at something different, such as a library. the team called the doctored images ‘adversarial examples’.a year later, clune and his then-phd student anh nguyen, together with jason yosinski at cornell university in ithaca, new york, showed that it was possible to make dnns see things that were not there, such as a penguin in a pattern of wavy lines5. anybody who has played with machine learning knows these systems make stupid mistakes once in a while, says yoshua bengio at the university of montreal in canada, who is a pioneer of deep learning. what was a surprise was the type of mistake, he says. that was pretty striking. it’s a type of mistake we would not have imagined would happen.new types of mistake have come thick and fast. last year, nguyen, who is now at auburn university in alabama, showed that simply rotating objects in an image was sufficient to throw off some of the best image classifiers around6. this year, hendrycks and his colleagues reported that even unadulterated, natural images can still trick state-of-the-art classifiers into making unpredictable gaffes, such as identifying a mushroom as a pretzel or a dragonfly as a manhole cover7.the issue goes beyond object recognition: any ai that uses dnns to classify inputs — such as speech — can be fooled. ais that play games can be sabotaged: in 2017, computer scientist sandy huang, a phd student at the university of california, berkeley, and her colleagues focused on dnns that had been trained to beat atari video games through a process called reinforcement learning8. in this approach, an ai is given a goal and, in response to a range of inputs, learns through trial and error what to do to reach that goal. it is the technology behind superhuman game-playing ais such as alphazero and the poker bot pluribus. even so, huang’s team was able to make their ais lose games by adding one or two random pixels to the screen.earlier this year, ai phd student adam gleave at the university of california, berkeley, and his colleagues demonstrated that it is possible to introduce an agent to an ai’s environment that acts out an ‘adversarial policy’ designed to confuse the ai’s responses9. for example, an ai footballer trained to kick a ball past an ai goalkeeper in a simulated environment loses its ability to score when the goalkeeper starts to behave in unexpected ways, such as collapsing on the ground.an ai footballer in a simulated penalty-shootout is confused when the ai goalkeeper enacts an ‘adversarial policy’: falling to the floor (right).credit: adam gleave/ref. 9knowing where a dnn’s weak spots are could even let a hacker take over a powerful ai. one example of that came last year, when a team from google showed that it was possible to use adversarial examples not only to force a dnn to make specific mistakes, but also to reprogram it entirely — effectively repurposing an ai trained on one task to do another3.many neural networks, such as those that learn to understand language, can, in principle, be used to encode any other computer program. in theory, you can turn a chatbot into whatever programme you want, says clune. this is where the mind starts to boggle. he imagines a situation in the near future in which hackers could hijack neural nets in the cloud to run their own spambot-dodging algorithms.for computer scientist dawn song at the university of california, berkeley, dnns are like sitting ducks. there are so many different ways that you can attack a system, she says. and defence is very, very difficult.dnns are powerful because their many layers mean they can pick up on patterns in many different features of an input when attempting to classify it. an ai trained to recognize aircraft might find that features such as patches of colour, texture or background are just as strong predictors as the things that we would consider salient, such as wings. but this also means that a very small change in the input can tip it over into what the ai considers an apparently different state.one answer is simply to throw more data at the ai; in particular, to repeatedly expose the ai to problematic cases and correct its errors. in this form of ‘adversarial training’, as one network learns to identify objects, a second tries to change the first network’s inputs so that it makes mistakes. in this way, adversarial examples become part of a dnn’s training data.hendrycks and his colleagues have suggested quantifying a dnn’s robustness against making errors by testing how it performs against a large range of adversarial examples. however, training a network to withstand one kind of attack could weaken it against others, they say. and researchers led by pushmeet kohli at google deepmind in london are trying to inoculate dnns against making mistakes. many adversarial attacks work by making tiny tweaks to the component parts of an input — such as subtly altering the colour of pixels in an image — until this tips a dnn over into a misclassification. kohli’s team has suggested that a robust dnn should not change its output as a result of small changes in its input, and that this property might be mathematically incorporated into the network, constraining how it learns.for the moment, however, no one has a fix on the overall problem of brittle ais. the root of the issue, says bengio, is that dnns don’t have a good model of how to pick out what matters. when an ai sees a doctored image of a lion as a library, a person still sees a lion because they have a mental model of the animal that rests on a set of high-level features — ears, a tail, a mane and so on — that lets them abstract away from low-level arbitrary or incidental details. we know from prior experience which features are the salient ones, says bengio. and that comes from a deep understanding of the structure of the world.one attempt to address this is to combine dnns with symbolic ai, which was the dominant paradigm in ai before machine learning. with symbolic ai, machines reasoned using hard-coded rules about how the world worked, such as that it contains discrete objects and that they are related to one another in various ways. some researchers, such as psychologist gary marcus at new york university, say hybrid ai models are the way forward. deep learning is so useful in the short term that people have lost sight of the long term, says marcus, who is a long-time critic of the current deep-learning approach. in may, he co-founded a start-up called robust ai in palo alto, california, which aims to mix deep learning with rule-based ai techniques to develop robots that can operate safely alongside people. exactly what the company is working on remains under wraps.even if rules can be embedded into dnns, they are still only as good as the data they learn from. bengio says that ai agents need to learn in richer environments that they can explore. for example, most computer-vision systems fail to recognize that a can of beer is cylindrical because they were trained on data sets of 2d images. that is why nguyen and colleagues found it so easy to fool dnns by presenting familiar objects from different perspectives. learning in a 3d environment — real or simulated — will help.but the way ais do their learning also needs to change. learning about causality needs to be done by agents that do things in the world, that can experiment and explore, says bengio. another deep-learning pioneer, jürgen schmidhuber at the dalle molle institute for artificial intelligence research in manno, switzerland, thinks along similar lines. pattern recognition is extremely powerful, he says — good enough to have made companies such as alibaba, tencent, amazon, facebook and google the most valuable in the world. but there’s a much bigger wave coming, he says. and this will be about machines that manipulate the world and create their own data through their own actions.in a sense, ais that use reinforcement learning to beat computer games are doing this already in artificial environments: by trial and error, they manipulate pixels on screen in allowed ways until they reach a goal. but real environments are much richer than the simulated or curated data sets on which most dnns train today.in a laboratory at the university of california, berkeley, a robot arm rummages through clutter. it picks up a red bowl and uses it to nudge a blue oven glove a couple of centimetres to the right. it drops the bowl and picks up an empty plastic spray bottle. then it explores the heft and shape of a paperback book. over several days of non-stop sifting, the robot starts to get a feel for these alien objects and what it can do with them.the robot arm is using deep learning to teach itself to use tools. given a tray of objects, it picks up and looks at each in turn, seeing what happens when it moves them around and knocks one object into another.robots use deep learning to explore how to use 3d tools.credit: annie xiewhen researchers give the robot a goal — for instance, presenting it with an image of a nearly empty tray and specifying that the robot arrange objects to match that state — it improvises, and can work with objects it has not seen before, such as using a sponge to wipe objects off a table. it also figured out that clearing up using a plastic water bottle to knock objects out of the way is quicker than picking up those objects directly. compared to other machine-learning techniques, the generality of what it can accomplish continues to impress me, says chelsea finn, who worked at the berkeley lab and is now continuing that research at stanford university in california.this kind of learning gives an ai a much richer understanding of objects and the world in general, says finn. if you had seen a water bottle or a sponge only in photographs, you might be able to recognize them in other images. but you would not really understand what they were or what they could be used for. your understanding of the world would be much shallower than if you could actually interact with them, she says.but this learning is a slow process. in a simulated environment, an ai can rattle through examples at lightning speed. in 2017, alphazero, the latest version of deepmind’s self-taught game-playing software, was trained to become a superhuman player of go, then chess and then shogi (a form of japanese chess) in just over a day. in that time, it played more than 20 million training games of each event.ai robots can’t learn this quickly. almost all major results in deep learning have relied heavily on large amounts of data, says jeff mahler, co-founder of ambidextrous, an ai and robotics company in berkeley, california. collecting tens of millions of data points would cost years of continuous execution time on a single robot. what’s more, the data might not be reliable, because the calibration of sensors can change over time and hardware can degrade.because of this, most robotics work that involves deep learning still uses simulated environments to speed up the training. what you can learn depends on how good the simulators are, says david kent, a phd student in robotics at the georgia institute of technology in atlanta. simulators are improving all the time, and researchers are getting better at transferring lessons learnt in virtual worlds over to the real. such simulations are still no match for real-world complexities, however.finn argues that learning using robots is ultimately easier to scale up than learning with artificial data. her tool-using robot took a few days to learn a relatively simple task, but it did not require heavy monitoring. you just run the robot and just kind of check in with it every once in a while, she says. she imagines one day having lots of robots out in the world left to their own devices, learning around the clock. this should be possible — after all, this is how people gain an understanding of the world. a baby doesn’t learn by downloading data from facebook, says schmidhuber.a baby can also recognize new examples from just a few data points: even if they have never seen a giraffe before, they can still learn to spot one after seeing it once or twice. part of the reason this works so quickly is because the baby has seen many other living things, if not giraffes, so is already familiar with their salient features.a catch-all term for granting these kinds of abilities to ais is transfer learning: the idea being to transfer the knowledge gained from previous rounds of training to another task. one way to do this is to reuse all or part of a pre-trained network as the starting point when training for a new task. for example, reusing parts of a dnn that has already been trained to identify one type of animal — such as those layers that recognize basic body shape — could give a new network the edge when learning to identify a giraffe.an extreme form of transfer learning aims to train a new network by showing it just a handful of examples, and sometimes only one. known as one-shot or few-shot learning, this relies heavily on pre-trained dnns. imagine you want to build a facial-recognition system that identifies people in a criminal database. a quick way is to use a dnn that has already seen millions of faces (not necessarily those in the database) so that it has a good idea of salient features, such as the shapes of noses and jaws. now, when the network looks at just one instance of a new face, it can extract a useful feature set from that image. it can then compare how similar that feature set is to those of single images in the criminal database, and find the closest match.having a pre-trained memory of this kind can help ais to recognize new examples without needing to see lots of patterns, which could speed up learning with robots. but such dnns might still be at a loss when confronted with anything too far from their experience. it’s still not clear how much these networks can generalize.even the most successful ai systems such as deepmind’s alphazero have an extremely narrow sphere of expertise. alphazero’s algorithm can be trained to play both go and chess, but not both at once. retraining a model’s connections and responses so that it can win at chess resets any previous experience it had of go. if you think about it from the perspective of a human, this is kind of ridiculous, says finn. people don’t forget what they’ve learnt so easily.alphazero’s success at playing games wasn’t just down to effective reinforcement learning, but also to an algorithm that helped it (using a variant of a technique called monte carlo tree search) to narrow down its choices from the possible next steps10. in other words, the ai was guided in how best to learn from its environment. chollet thinks that an important next step in ai will be to give dnns the ability to write their own such algorithms, rather than using code provided by humans.supplementing basic pattern-matching with reasoning abilities would make ais better at dealing with inputs beyond their comfort zone, he argues. computer scientists have for years studied program synthesis, in which a computer generates code automatically. combining that field with deep learning could lead to systems with dnns that are much closer to the abstract mental models that humans use, chollet thinks.in robotics, for instance, computer scientist kristen grauman at facebook ai research in menlo park, california, and the university of texas at austin is teaching robots how best to explore new environments for themselves. this can involve picking in which directions to look when presented with new scenes, for instance, and which way to manipulate an object to best understand its shape or purpose. the idea is to get the ai to predict which new viewpoint or angle will give it the most useful new data to learn from.researchers in the field say they are making progress in fixing deep learning’s flaws, but acknowledge that they’re still groping for new techniques to make the process less brittle. there is not much theory behind deep learning, says song. if something doesn’t work, it’s difficult to figure out why, she says. the whole field is still very empirical. you just have to try things.for the moment, although scientists recognize the brittleness of dnns and their reliance on large amounts of data, most say that the technique is here to stay. the realization this decade that neural networks — allied with enormous computing resources — can be trained to recognize patterns so well remains a revelation. no one really has any idea how to better it, says clune.